#기술적 지표 코드 저장
'''
참고:https://github.com/jm199504/financial-data-preprocessing/blob/master/calc_technical_indicators_formula.py
'''


def Williams(df,timeperiod=14):
    wr_indicator = [''] * (timeperiod - 1)
    for i in range(0, len(list(df['volume'])) - timeperiod + 1):
        stock = df[i:timeperiod + i]
        wr_row = (-100) * (max(stock['high']) - stock['close'][-1]) / (max(stock['high']) - min(stock['low']))
        wr_indicator.append(wr_row)
    df['WR'] = wr_indicator

# Stochastic Oscillator SO
def Stochastic_Oscillator(df, timeperiod=14):
    so_indicator = [''] * ( timeperiod -1 )
    for i in range(0, len(list(df['volume'])) - timeperiod + 1 ):
        stock = df[i:timeperiod + i]
        so_row = 100 * (stock['close'][-1] - min(stock['low'])) / (max(stock['high']) - min(stock['low']))
        so_indicator.append(so_row)
    df['SO'] = so_indicator

# SMA
def SMA(df, timeperiod=15):
    sma_indicator = [''] * (timeperiod - 1)
    for i in range(len(df['volume'])-timeperiod+1):
        stock = df[i:timeperiod + i]
        sma_row = sum(stock['close'])/timeperiod
        sma_indicator.append(sma_row)
    df['SMA'] = sma_indicator

# Price Rate of Change PRC 
def Price_Rate_of_Change(df, timeperiod=14):
    prc_indicator = [''] * ( timeperiod - 1)
    for i in range(0, len(list(df['volume'])) - timeperiod + 1 ):
        stock = df[i:timeperiod + i]
        prc_row= (stock['close'][-1] - stock['close'][0]) / (stock['close'][0])
        prc_indicator.append(prc_row)
    df['PRC'] = prc_indicator
    
# Chaikin Volatility

# ATR

# Bollinger Band
def BolingerBand(df, n=20, k=2):   # 데이터 프레임, 20일, 표준편차=2
    df['20d_ma'] = pd.rolling_mean(df['Adj Close'], window=n)
    df['Bol_upper'] = pd.rolling_mean(df['Adj Close'], window=n) + k* pd.rolling_std(df['Adj Close'], n, min_periods=n)
    df['Bol_lower'] = pd.rolling_mean(df['Adj Close'], window=n) - k* pd.rolling_std(df['Adj Close'], n, min_periods=n)
    return df
